#+title: Week 2
#+startup: latexpreview
* complexity
** asymptotic
+ $y = \tan x$
  $x = \frac\pi2$
+ as $n \to \infty$
** measure
*** time
amount time as function of n
*** space
amount memory as function of n
** example
*** $f(n) = n^2 + 100n + \log_{10}n + 1000$
+ $f(1) = 1 + 100 + 0 + 1000 = 1101$
+ $f(100) = 10000 + 10000 + 2 + 1000 = 21002$
$\implies n^2$ dominates
** math
$f(n) = O(g(n)) \iff \exists c\in\mathbb{R}, N\in\mathbb{N} \: \forall n < N \: \colon \: 0 \le f(n) \le cg(n) \: \forall n>N$
* 4 common ops
1. insert
2. delete
   + typically requires search
3. search
4. sort

* complexity classes
** $O(n)$
+ $n =$ length of list
*** cases
**** worst $O(n)$
not in list
**** best $O(1)$
first item
**** average $O(\frac{n}2) = O(n)$
** $O(n \log_a n)$
** $O(\log_a n)$
** $O(n^2)$
** $O(a^n)$
* bounds
** $O(n)$ greatest upper bound
*** pf
+ want $c,N$ s.t.  $3n^2 + 4n - 2 \le cn^2$ $\forall n\ge N$
+ $\implies 3 + \frac4n - \frac2{ n^2 } \le c$
+ set $N=1$
+ $\implies 3 + 4 - 2 = 5 \le c$
+ choose $c=5$
*** transitive
**** 1
$f(n) = O(g(n))$
$g(n) = O(h(n))$
$\implies f(n) = O(h(n))$
**** 2
$f(n) = O(h(n))$
$g(n) = O(h(n))$
$\implies f(n) + g(n) = O(h(n))$
*** any $k^\text{th}$ deg poly of $n$ is $O(n^{k+j})$ $\forall j>0$
** $\Theta(n)$ greatest lowest bound
** $\Omega(n)$ both
* logarithm
** $\lg$ binary
** $\log$ decimal
** $\ln$ euler
